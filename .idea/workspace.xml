<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ec43e96e-fdc9-41b1-ba18-84df1749ba0c" name="Changes" comment="Test Submission for michael larsen.&#10;&#10;In order to get this to run, you will need to integrate the H2 database. The dependencies have been added to the gradle build script so 'gradle build' shouuld retrieve everything necessary. After running the service, the database should be available. There is an SQL script in src/main/resources which contains the data I used to test. Copy and paste into the console window at http://localhost:8080/h2-console/login.do,&#10;&#10;*The Service must be running in order to access the database - H2 is not very robust but was a good replacement for the backend server.&#10;&#10;Thank you - call me if you have any trouble. I am going to continue to test and do more pushes, but the main code runs for all end points.">
      <change beforePath="$PROJECT_DIR$/.gradle/7.3.1/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.1/executionHistory/executionHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.3.1/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.1/executionHistory/executionHistory.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.3.1/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.1/fileHashes/fileHashes.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.3.1/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.1/fileHashes/fileHashes.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/7.3.1/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.1/fileHashes/resourceHashesCache.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/example/rqchallenge/employees/EmployeeService.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/example/rqchallenge/employees/EmployeeService.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/main/com/example/rqchallenge/employees/controller/EmployeeControllerImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/build/classes/java/main/com/example/rqchallenge/employees/controller/EmployeeControllerImpl.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/classes/java/test/com/example/rqchallenge/employees/EmployeeEntityControllerImplTest.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/libs/rqChallenge-0.0.1-SNAPSHOT-plain.jar" beforeDir="false" afterPath="$PROJECT_DIR$/build/libs/rqChallenge-0.0.1-SNAPSHOT-plain.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/libs/rqChallenge-0.0.1-SNAPSHOT.jar" beforeDir="false" afterPath="$PROJECT_DIR$/build/libs/rqChallenge-0.0.1-SNAPSHOT.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/classes/com.example.rqchallenge.employees.EmployeeEntityControllerImplTest.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/tests/test/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/tests/test/packages/com.example.rqchallenge.employees.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/tests/test/packages/com.example.rqchallenge.employees.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/resources/main/employees.ddl" beforeDir="false" afterPath="$PROJECT_DIR$/build/resources/main/employees.ddl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/test-results/test/TEST-com.example.rqchallenge.employees.EmployeeEntityControllerImplTest.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/build/test-results/test/binary/output.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/test-results/test/binary/output.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/test-results/test/binary/output.bin.idx" beforeDir="false" afterPath="$PROJECT_DIR$/build/test-results/test/binary/output.bin.idx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/test-results/test/binary/results.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/test-results/test/binary/results.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/tmp/compileTestJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/compileTestJava/previous-compilation-data.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/rqchallenge/employees/controller/EmployeeControllerImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/rqchallenge/employees/controller/EmployeeControllerImpl.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/employees.ddl" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/employees.ddl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/com/example/rqchallenge/employees/EmployeeControllerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/example/rqchallenge/employees/EmployeeControllerTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="rqChallenge" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="rqChallenge" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JUnit5 Test Class" />
        <option value="Enum" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "mjlslink"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/mjlslink/reliaquest-example.git",
    "accountId": "7060ddd7-6b36-4a6e-a637-d5e0fdc6648f"
  }
}]]></component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2nAojGsI3AnP5HzYXAlUiXdElVo" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Downloaded.Files.Path.Enabled": "false",
    "Gradle.EmployeeControllerImplTest.getAllEmployees.executor": "Run",
    "Gradle.EmployeeControllerTest.createEmployee_duplicate.executor": "Run",
    "Gradle.EmployeeEntityControllerImplTest.createEmployee_complete.executor": "Run",
    "Gradle.EmployeeEntityControllerImplTest.createEmployee_no_pic.executor": "Debug",
    "Gradle.EmployeeEntityControllerImplTest.getAllEmployees.executor": "Run",
    "Gradle.EmployeeEntityControllerImplTest.getEmployeesByNameSearch_defined_name.executor": "Run",
    "Gradle.java-employee-challenge [:com.example.rqchallenge.RqChallengeApplication.main()].executor": "Run",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
    "create.test.in.the.same.root": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/Owner/reliaquest/java-employee-challenge/src/test/resources",
    "project.structure.last.edited": "SDKs",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.3264368",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.example.rqchallenge.employees" />
      <recent name="org.springframework.context" />
      <recent name="com.example.rqchallenge.model" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Owner\reliaquest\java-employee-challenge\src\test\resources" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="com.example.rqchallenge.employees" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.EmployeeControllerTest.createEmployee_duplicate">
    <configuration name="RqChallengeApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.rqchallenge.RqChallengeApplication" />
      <module name="rqChallenge.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.rqchallenge.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EmployeeControllerTest.createEmployee_duplicate" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;com.example.rqchallenge.employees.EmployeeControllerTest.createEmployee_duplicate&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="EmployeeEntityControllerImplTest.createEmployee_complete" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;com.example.rqchallenge.employees.EmployeeEntityControllerImplTest.createEmployee_complete&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="EmployeeEntityControllerImplTest.createEmployee_no_pic" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;com.example.rqchallenge.employees.EmployeeEntityControllerImplTest.createEmployee_no_pic&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="EmployeeEntityControllerImplTest.getEmployeesByNameSearch_defined_name" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;com.example.rqchallenge.employees.EmployeeEntityControllerImplTest.getEmployeesByNameSearch_defined_name&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.EmployeeControllerTest.createEmployee_duplicate" />
        <item itemvalue="Application.RqChallengeApplication" />
        <item itemvalue="Gradle.EmployeeEntityControllerImplTest.createEmployee_complete" />
        <item itemvalue="Gradle.EmployeeEntityControllerImplTest.getEmployeesByNameSearch_defined_name" />
        <item itemvalue="Gradle.EmployeeEntityControllerImplTest.createEmployee_no_pic" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ec43e96e-fdc9-41b1-ba18-84df1749ba0c" name="Changes" comment="" />
      <created>1728425379913</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1728425379913</updated>
    </task>
    <task id="LOCAL-00001" summary="Test Submission for michael larsen.&#10;&#10;In order to get this to run, you will need to integrate the H2 database. The dependencies have been added to the gradle build script so 'gradle build' shouuld retrieve everything necessary. After running the service, the database should be available. There is an SQL script in src/main/resources which contains the data I used to test. Copy and paste into the console window at http://localhost:8080/h2-console/login.do,&#10;&#10;*The Service must be running in order to access the database - H2 is not very robust but was a good replacement for the backend server.&#10;&#10;Thank you - call me if you have any trouble. I am going to continue to test and do more pushes, but the main code runs for all end points.">
      <option name="closed" value="true" />
      <created>1728524414130</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1728524414130</updated>
    </task>
    <task id="LOCAL-00002" summary="Test Submission for michael larsen.&#10;&#10;In order to get this to run, you will need to integrate the H2 database. The dependencies have been added to the gradle build script so 'gradle build' shouuld retrieve everything necessary. After running the service, the database should be available. There is an SQL script in src/main/resources which contains the data I used to test. Copy and paste into the console window at http://localhost:8080/h2-console/login.do,&#10;&#10;*The Service must be running in order to access the database - H2 is not very robust but was a good replacement for the backend server.&#10;&#10;Thank you - call me if you have any trouble. I am going to continue to test and do more pushes, but the main code runs for all end points.">
      <option name="closed" value="true" />
      <created>1728525240060</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1728525240060</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Test Submission for michael larsen.&#10;&#10;In order to get this to run, you will need to integrate the H2 database. The dependencies have been added to the gradle build script so 'gradle build' shouuld retrieve everything necessary. After running the service, the database should be available. There is an SQL script in src/main/resources which contains the data I used to test. Copy and paste into the console window at http://localhost:8080/h2-console/login.do,&#10;&#10;*The Service must be running in order to access the database - H2 is not very robust but was a good replacement for the backend server.&#10;&#10;Thank you - call me if you have any trouble. I am going to continue to test and do more pushes, but the main code runs for all end points." />
    <option name="LAST_COMMIT_MESSAGE" value="Test Submission for michael larsen.&#10;&#10;In order to get this to run, you will need to integrate the H2 database. The dependencies have been added to the gradle build script so 'gradle build' shouuld retrieve everything necessary. After running the service, the database should be available. There is an SQL script in src/main/resources which contains the data I used to test. Copy and paste into the console window at http://localhost:8080/h2-console/login.do,&#10;&#10;*The Service must be running in order to access the database - H2 is not very robust but was a good replacement for the backend server.&#10;&#10;Thank you - call me if you have any trouble. I am going to continue to test and do more pushes, but the main code runs for all end points." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/test/java/com/example/rqchallenge/employees/EmployeeControllerTest.java</url>
          <line>72</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/com/example/rqchallenge/employees/EmployeeService.java</url>
          <line>40</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/com/example/rqchallenge/employees/EmployeeService.java</url>
          <line>62</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="org.h2.jdbc.JdbcSQLDataException" package="org.h2.jdbc" />
          <option name="timeStamp" value="4" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.NumberFormatException" package="java.lang" />
          <option name="timeStamp" value="6" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>